<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://mybatis.org/schema/mybatis-spring
		http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd">
 
    <context:component-scan base-package="spring.web" />
    <mvc:annotation-driven />
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
    <!-- ch02: resource -->
    <mvc:resources mapping="/img/**" location="/WEB-INF/resources/img/"/>
    <mvc:resources mapping="/css/**" location="/WEB-INF/resources/css/"/>
    <mvc:resources mapping="/js/**" location="/WEB-INF/resources/js/"/>
    
    <!-- ch04: mybatis -->
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiName" value="java:comp/env/jdbc/hr" />
        <property name="resourceRef" value="true" />
    </bean> 
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" /><!-- 위의 bean아이디 값 입력. -->
        <property name="configLocation"
            value="classpath:spring/web/ch04/config/SqlMapConfig.xml"/>
        <property name="mapperLocations" >
            <array>
                <value>classpath:spring/web/ch04/ex01/dao/mapper/**/*.xml</value>
                <value>classpath:spring/web/ch04/ex02/dao/mapper/**/*.xml</value>
            </array>
        </property>
    </bean>
    <mybatis:scan base-package="spring.web.ch04.ex01.dao.mapper" />  
    <mybatis:scan base-package="spring.web.ch04.ex02.dao.mapper" /> 
    <!-- mybatis 매퍼생성이 모두 끝난다. -->
    <!-- ch05: ajax  이전까지는 최종적으로jsp가 리스폰스를해서 화면이 출력.
         json을 컨트롤러 자바에서 만드는 방법을 사용 한다. -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
    <!-- 메세지를 json형태의 데이터로 변환이 가능하도록 만들어 준다. -->
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>     
    
    <!-- ch06: file upload -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    <context:property-placeholder location="classpath:spring/web/ch06/config/upload.properties"/> 
    <!-- property 파일을 만들어줘야한다. -->
    <mvc:resources mapping="/WEB-INF/resources/img/perf/**" location="/WEB-INF/resources/img/perf/" />
    <!-- upload 만으로는 생기지 않는다 생성한 직후 임의의 파일을 하나 생성해주면 된다. --> 

	<!-- ch07: @Transactional 이 어노테이션만 관리하면 어느부분에서 에러가 발생하던
		 트랜잭션을 알아서 관리 해준다. -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
          <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />
    <mybatis:scan base-package="spring.web.ch07.ex01.dao.mapper" />
    <aop:aspectj-autoproxy/>
</beans>
